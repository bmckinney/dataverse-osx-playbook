---
- name: check if glassfish is loaded
  shell: launchctl list
  changed_when: False
  register: glassfish_loaded_result
  tags:
    - glassfish-multimode
    - glassfish-install
    - glassfish-clean
    - glassfish-start
    - glassfish-stop
    - install
    - clean
    - start
    - stop

- name: fetch glassfish4
  get_url: url={{gf_dist_url}} dest=/tmp force=no
  tags:
    - glassfish-install
    - install

- name: unpack glassfish
  action: shell creates={{gf_dir}} unzip -o /tmp/{{gf_dist}} -d /usr/local
  tags:
    - glassfish-install
    - install

- name: ensure dataverse_gf_root exists
  file: path={{gf_dir}} state=directory mode=0755
  tags:
    - glassfish-install
    - install

- name: remove install files
  action: file path=/tmp/{{gf_dist}} state=absent
  tags:
    - glassfish-install
    - install

- name: delete old weld
  file: path={{gf_dir}}/glassfish/modules/weld-osgi-bundle.jar state=absent
  tags:
    - glassfish-install
    - install

- name: fetch new weld
  get_url: url={{gf_weld_url}}
    dest={{gf_dir}}/glassfish/modules
  tags:
    - glassfish-install
    - install

- name: fetch postgres driver
  get_url: url={{pg_driver_url}} dest={{gf_dir}}/glassfish/lib force=no
  tags:
    - glassfish-install
    - install

- name: fetch jhove config file
  get_url: url={{jhove_conf_url}} dest={{gf_dir}}/glassfish/domains/domain1/config force=no
  tags:
    - glassfish-install
    - install

- name: fetch jhove schema file
  get_url: url={{jhove_xsd_url}} dest={{gf_dir}}/glassfish/domains/domain1/config force=no
  tags:
    - glassfish-install
    - install

- name: remove glassfish
  file: path={{gf_dir}} state=absent
  tags:
    - glassfish-clean
    - clean

- name: deploy war file
  command: "cp -f {{dvn_war}} {{gf_dir}}/glassfish/domains/domain1/autodeploy"
  ignore_errors: yes
  tags: deploy-war

- name: copy glassfish launchagent plist
  command: "cp files/com.sun.glassfish.plist {{launch_agents_dir}}/com.sun.glassfish.plist"
  tags:
    - glassfish-install
    - install

- name: load glassfish luanchagent
  shell: launchctl load -w {{launch_agents_dir}}/com.sun.glassfish.plist
  when: "'glassfish' not in glassfish_loaded_result.stdout"
  tags:
    - glassfish-install
    - install

- name: unload glassfish luanchagent
  shell: launchctl unload -w {{launch_agents_dir}}/com.sun.glassfish.plist
  when: "'glassfish' in glassfish_loaded_result.stdout"
  tags:
    - glassfish-clean
    - clean

- name: start glassfish luanchagent
  shell: launchctl start glassfish
  when: "'glassfish' in glassfish_loaded_result.stdout"
  tags:
    - glassfish-start
    - start

# note: must add --verbose=true to the asadmin command for this to work
# otherwise: you get a permission error on bsexec for os x < 10.10.x and need to run as sudo
# see: https://java.net/jira/browse/GLASSFISH-21343
- name: stop glassfish luanchagent
  shell: launchctl stop glassfish
  when: "'glassfish' in glassfish_loaded_result.stdout"
  tags: 
    - glassfish-stop
    - stop

- name: stop glassfish using asadmin
  command: "{{gf_dir}}/glassfish/bin/asadmin stop-domain domain1"
  ignore_errors: yes
  tags:
    - glassfish-asadmin-stop

# multimode workaround since we can't start/stop a domain within a multimode file for osx 10.10.x

- name: check if glassfish is available in launchctl
  shell: launchctl list
  changed_when: False
  register: gf_launchctl
  tags:
    - glassfish-multimode
    - glassfish-install
    - install

- name: start multimode session
  shell: launchctl start glassfish
  when: "'glassfish' in gf_launchctl.stdout"
  tags:
    - glassfish-multimode
    - glassfish-install
    - install

# - name: waiting for glassfish to start
#   shell: curl --head --silent http://localhost:4848/common/index.jsf
#   register: result
#   until: result.stdout.find("200 OK") != -1
#   retries: 12
#   delay: 5
#   tags:
#     - glassfish-multimode
#     - glassfish-install
#     - install

- name: waiting for glassfish admin to start
  wait_for: port=4848 delay=30 timeout=600 state=started
  when: "'glassfish' in gf_launchctl.stdout"
  tags:
    - glassfish-multimode
    - glassfish-install
    - install

- name: run multimode commands
  command: "{{gf_dir}}/glassfish/bin/asadmin multimode --file files/glassfish-multimode.txt"
  when: "'glassfish' in gf_launchctl.stdout"
  notify: stop multimode session
  ignore_errors: yes
  tags:
    - glassfish-multimode
    - glassfish-install
    - install

- name: stop multimode session
  shell: launchctl stop glassfish
  when: "'glassfish' in gf_launchctl.stdout"
  tags:
    - glassfish-multimode
    - glassfish-install
    - install

- name: install jq
  homebrew: name=jq state=latest
  tags:
    - glassfish-install
    - install
